#!/bin/bash

# Reset
N='\033[0m'         # Text Reset

# Regular Colors
BK='\033[0;30m'     # Black
R='\033[0;31m'      # Red
G='\033[0;32m'      # Green
Y='\033[0;33m'      # Yellow
B='\033[0;34m'      # Blue
P='\033[0;35m'      # Purple
C='\033[0;36m'      # Cyan
W='\033[0;37m'      # White

# Bold
BBK='\033[1;30m'    # Black
BR='\033[1;31m'     # Red
BG='\033[1;32m'     # Green
BY='\033[1;33m'     # Yellow
BB='\033[1;34m'     # Blue
BP='\033[1;35m'     # Purple
BC='\033[1;36m'     # Cyan
BW='\033[1;37m'     # White

# Underline
UBK='\033[4;30m'    # Black
UR='\033[4;31m'     # Red
UG='\033[4;32m'     # Green
UY='\033[4;33m'     # Yellow
UB='\033[4;34m'     # Blue
UP='\033[4;35m'     # Purple
UC='\033[4;36m'     # Cyan
UW='\033[4;37m'     # White

#
# Main
#

LOGSPOUT_IMAGE=${LOGSPOUT_IMAGE:-gliderlabs\/logspout}
LOGSPOUT_NAME=${LOGSPOUT_NAME:-logspout_stream}

LOGSPOUT_CONTAINER=$(docker images | grep $LOGSPOUT_IMAGE | awk '{ print $3}')
RUNNING_LOGSPOUT_CONTAINER=$(docker ps | grep $LOGSPOUT_NAME | awk '{ print $1}')
EXTERNAL_PORT=$(docker port "$RUNNING_LOGSPOUT_CONTAINER" 80)
STREAM_URL=http://${EXTERNAL_PORT}/logs
if [ -z "$RUNNING_LOGSPOUT_CONTAINER" ]; then
  docker run -d --name="$LOGSPOUT_NAME" \
    --volume=/var/run/docker.sock:/var/run/docker.sock \
    --publish=127.0.0.1:8888:80 \
    $LOGSPOUT_IMAGE
fi

echo -e "\n${UY}Logspout Container Check${N}"
echo -e "Container: $RUNNING_LOGSPOUT_CONTAINER\nPort: $EXTERNAL_PORT"

echo -e "\n${UG}Stream URL:${N} ${STREAM_URL}"
curl $STREAM_URL

exit 0
