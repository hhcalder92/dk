#!/bin/bash
# Atos Phoenix R&D CI Team

# Reset
N='\033[0m'         # Text Reset

# Regular Colors
BK='\033[0;30m'     # Black
R='\033[0;31m'      # Red
G='\033[0;32m'      # Green
Y='\033[0;33m'      # Yellow
B='\033[0;34m'      # Blue
P='\033[0;35m'      # Purple
C='\033[0;36m'      # Cyan
W='\033[0;37m'      # White

# Bold
BBK='\033[1;30m'    # Black
BR='\033[1;31m'     # Red
BG='\033[1;32m'     # Green
BY='\033[1;33m'     # Yellow
BB='\033[1;34m'     # Blue
BP='\033[1;35m'     # Purple
BC='\033[1;36m'     # Cyan
BW='\033[1;37m'     # White

# Underline
UBK='\033[4;30m'    # Black
UR='\033[4;31m'     # Red
UG='\033[4;32m'     # Green
UY='\033[4;33m'     # Yellow
UB='\033[4;34m'     # Blue
UP='\033[4;35m'     # Purple
UC='\033[4;36m'     # Cyan
UW='\033[4;37m'     # White

#
# search-docker-registry-v2
#
search-docker-registry-v2()
{
# Credit: github.com/BradleyA/Search-docker-registry-v2-script.1.0/blob/master/view-private-registry
# docker registry 2.0 does not really come with a search for private registries
# Querying the calatog (_catalog) returns the catalog in json format and therefore providing the info although not formatted
# However we can also parsed directly the persistent area if we are on the registry system
# The script below taken from the web (modified a little):
#https://github.com/BradleyA/Search-docker-registry-v2-script.1.0/blob/master/view-private-registry
# provides the same info but better formatted.
PERSISTENT_REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY="/build/docker-registry/data" 
 
find $PERSISTENT_REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY -print | \
grep 'v2/repositories' | grep 'current' | grep -v 'link' | \
    sed -e 's/\/_manifests\/tags\//:/' | \
    sed -e 's/\/current//' | \
    sed -e 's/^.*repositories\//    /' | \
sort >/dev/shm/a1 
sed -e 's/^[ \t]*//' /dev/shm/a1
rm -f /tmp/a1
}


#
# Main
#
echo -e "\n${UY}DOCKER CONTAINERS and IMAGES${N}"

echo -e "\n${UG}Containers${N}"
docker ps -a

echo -e "\n${N}${UG}Running Containers${N}"
docker ps

echo -e "\n${N}${UG}Locally fetched images${N}"
docker images

if [[ -d /build/docker-registry/data ]]; then
    echo -e "${N}"
    echo -e "\n${UG}Private Registry images at https://ci.usrnd.lan/v2/${N}"
    search-docker-registry-v2
fi

echo -e "${N}"

exit 0

